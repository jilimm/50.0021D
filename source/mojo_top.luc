global RowNumb{
  const ROW1 = 2b00;
  const ROW2= 2b01;
  const ROW3=2b11;
}


module mojo_top (
//pressing buttons will make the LED lights light up
    input clk,              // 50MHz clock
    input rst,            // reset button (active low)
    output high2,
    output high1,
    output high3,
    output low1,
    output low2,
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full
    input button,
    input button2
  ) {
  
  //LED[ctr][b]
  //ctr==number of rows
  //ctr==> row to be active 
  //if active connect high to be high1
  //b controls the LEDs in the row to be lighted 
  //b will correspond to the 
  //b==the randomly generate number

  //all the highs corresponding to the row will be 'activated'
  //rand[2] is the configuration randomly generated
  //it is controlled by the 'low' wires
  sig rand[2];
  
  .clk(clk) {
    .rst(rst){
    //fsm state = {WRONG, NEW, CONTINUE};
    //div is 26 (so its slow enough for you to see)
    //testing cricuit is only 3 rows (
      counter ctr(#DIV(20),#SIZE(2));
    //ctr value corresponds to a (row chosen)
    }
    //pn_gen pn_gen;
  }
   
  always{
  high1=0;
  high2=0;
  high3=0;
    //only generate a new number if 
    //pn_gen.seed=seed.q;
    //pn_gen.
    //pn_gen.rst=rst; 
    
    rand = 2b10;
    case (ctr.value){
      RowNumb.ROW1:
      //row 1 is active, the rest are not active;
        high1=1;
        high2=0;
        high3=0;
        
      RowNumb.ROW2:
        high1=0;
        high2=1;
        high3=0;
        
      RowNumb.ROW3:
        high1=0;
        high2=0;
        high3=1;
        
    }
    
    //if we want to activate "low"s we do it by making it low
    //so put inverter
    low1=~rand[0];
    low2=~rand[1];
        

    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
  }
}